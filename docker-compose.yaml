services:
  frontend:
    container_name: frontend
    build:
        context: ./Frontend
    networks:
      - my_network
    ports:
      - 5173:5173
    restart: on-failure
    depends_on:
      - backend
    volumes:
      - ./Frontend/src:/usr/src/app/src
    deploy:
      resources:
        limits:
          memory: 512M
  
  model:
    container_name: model
    networks:
      - my_network
    build: ./AI_Model
    deploy:
      resources:
        limits:
          memory: 2G
  soil:
    container_name: soil
    networks:
      - my_network
    build: ./Soil_Model
    deploy:
      resources:
        limits:
          memory: 512M
  
  db:
    container_name: postgres
    networks:
      - my_network
    image: postgres:latest
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=1234
    volumes:
      - Database:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "user", "-d", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
  
  backend:
    container_name: backend
    networks:
      - my_network
    environment:
      - DB_NAME=postgres
      - DB_USER=user
      - DB_PASSWORD=1234
    build: ./Backend
    volumes:
      - ./Backend:/usr/src/app
    depends_on:
      - db
    deploy:
      resources:
        limits:
          memory: 1G

networks:
  my_network:
    driver: bridge

volumes:
  Database:



